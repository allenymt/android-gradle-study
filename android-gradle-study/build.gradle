// Top-level build file where you can add configuration options common to all sub-projects/modules.
println("Root build.gradle: " + project)

buildscript {

    repositories {
        maven {
            url uri('./repo')
        }
        google()
        jcenter()
        println("Root build.gradle --> buildscript --> repositories")
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "com.jeremyliao.gradle:plugin:0.0.1"
        classpath "com.jeremyliao.gradle:plugin1:0.0.1"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20'
//        classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0-rc3'
        println("Root build.gradle --> buildscript --> dependencies")
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        println("Root build.gradle --> allprojects --> repositories")
    }
}

beforeEvaluate {
    project ->
        println("beforeEvaluate: $project")
}

afterEvaluate {
    project ->
        println("afterEvaluate: $project")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task doNothing(group: 'demo') {
    description 'task doNothing'
    println("config task doNothing")
    afterEvaluate {
        println 'doNothing afterEvaluate'
    }
    doLast {
        println "execute task doNothing"
    }
}

task doSomethingAfterAssemble(group: 'demo') {
    doLast {
        println "execute task doSomethingAfterAssemble"
    }
    dependsOn('app:assemble')
}

apply from: 'groovy_test.gradle'
apply from: 'yl_test_task.gradle'
apply from: 'yl_test_closure.gradle'

println("Root build.gradle getScriptClassPath: " + project.buildscript.getScriptClassPath())

ext {
    root_project_ext_pro = 'hello'
}

println("root_project_ext_pro: " + root_project_ext_pro)

Settings
gradle.getTaskGraph().addTaskExecutionGraphListener(new TaskExecutionGraphListener() {
    @Override
    void graphPopulated(TaskExecutionGraph graph) {
        graph.whenReady {
        }
    }
})